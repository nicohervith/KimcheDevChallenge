{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programaci\\xF3n\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\components\\\\SearchCountry.js\";\nimport React, { useEffect, useState } from \"react\";\nimport CardContainer from \"./CardContainer\";\n\nconst SearchCountry = _ref => {\n  let {\n    countries\n  } = _ref;\n  const [countrySearch, setCountrySearch] = useState([]);\n  const [countryInput, setCountryInput] = useState([]);\n  const [continent, setContinent] = useState(null);\n  const [language, setLanguage] = useState(null);\n  useEffect(() => {\n    if (continent === null) {\n      setContinent(true);\n    }\n  }, [country]);\n\n  const handleChange = e => {\n    setCountryInput(e.target.value);\n    filterCountry(e.target.value);\n  };\n\n  const filterCountry = searchInput => {\n    let result = countries.filter(country => {\n      if (country.name.toString().toLowerCase().startsWith(searchInput.toLowerCase()) && country.name.toString().toLowerCase().includes(searchInput.toLowerCase())) {\n        return country;\n      }\n    });\n    setCountrySearch(result);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n  };\n\n  const showContinent = () => {\n    setContinent(true);\n    setLanguage(null);\n  };\n\n  const showLanguage = () => {\n    setLanguage(true);\n    setContinent(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-input\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"input-search\",\n    placeholder: \"Search\",\n    value: countryInput,\n    onChange: handleChange,\n    autoFocus: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"Group By: \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"container-button\",\n    onClick: showContinent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, \"Continent\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"container-button\",\n    type: \"button\",\n    onClick: showLanguage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"Language\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardContainer, {\n    country: countrySearch,\n    continent: continent,\n    language: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default SearchCountry;","map":{"version":3,"sources":["D:/ProgramaciÃ³n/dev-challenge-template-master/kimchechallenge/src/components/SearchCountry.js"],"names":["React","useEffect","useState","CardContainer","SearchCountry","countries","countrySearch","setCountrySearch","countryInput","setCountryInput","continent","setContinent","language","setLanguage","country","handleChange","e","target","value","filterCountry","searchInput","result","filter","name","toString","toLowerCase","startsWith","includes","handleSubmit","preventDefault","showContinent","showLanguage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport CardContainer from \"./CardContainer\";\r\n\r\n\r\nconst SearchCountry = ({ countries }) => {\r\n  \r\n  const [countrySearch, setCountrySearch] = useState([]);\r\n  const [countryInput, setCountryInput] = useState([]);\r\n  const [continent, setContinent] = useState(null);\r\n  const [language, setLanguage] = useState(null);\r\n\r\n  useEffect(() => {\r\n    if (continent === null) {\r\n      setContinent(true);\r\n    }\r\n  }, [  country ]);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setCountryInput(e.target.value);\r\n    filterCountry(e.target.value);\r\n  };\r\n\r\n  const filterCountry = (searchInput) => {\r\n    let result = countries.filter((country) => {\r\n      if (\r\n        country.name\r\n          .toString()\r\n          .toLowerCase()\r\n          .startsWith(searchInput.toLowerCase()) &&\r\n        country.name\r\n          .toString()\r\n          .toLowerCase()\r\n          .includes(searchInput.toLowerCase())\r\n      ) {\r\n        return country;\r\n      }\r\n    });\r\n    setCountrySearch(result);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n  };\r\n\r\n  const showContinent = () => {\r\n    setContinent(true);\r\n    setLanguage(null);\r\n  };\r\n\r\n  const showLanguage = () => {\r\n    setLanguage(true);\r\n    setContinent(null);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container-input\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input-search\"\r\n            placeholder=\"Search\"\r\n            value={countryInput}\r\n            onChange={handleChange}\r\n            autoFocus\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div>\r\n        <div className=\"container-text\">\r\n          <h2 className=\"text-container\">Group By: </h2>\r\n          <div className=\"container-buttons\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"container-button\"\r\n              onClick={showContinent}\r\n            >\r\n              Continent\r\n            </button>\r\n          </div>\r\n          <div className=\"container-buttons\">\r\n            <button\r\n              className=\"container-button\"\r\n              type=\"button\"\r\n              onClick={showLanguage}\r\n            >\r\n              Language\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"container-card\">\r\n        <CardContainer\r\n          country={countrySearch}\r\n          continent={continent}\r\n          language={language}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchCountry;\r\n"]},"metadata":{},"sourceType":"module"}