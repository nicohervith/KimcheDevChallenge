{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programaci\\xF3n\\\\dev-challenge-template-master\\\\kimchechallenge\\\\src\\\\components\\\\CardContainer.js\";\nimport React from \"react\";\n\nconst CardCountry = props => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, props.country.length === 0 ? /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }\n  }, \"try some text \", /*#__PURE__*/React.createElement(\"i\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 25\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, props.country.map(country => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    key: country.code,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card-container-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, props.continent === true ? /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, country.continent.name) : /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, country.languages.map(len => /*#__PURE__*/React.createElement(\"p\", {\n    key: len.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 25\n    }\n  }, len.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }\n  }, country.emoji, \" \", country.name), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }\n  }, country.native), props.continent === true ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 23\n    }\n  }, \"Languages:\"), country.languages.map(len => /*#__PURE__*/React.createElement(\"li\", {\n    key: len.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, len.name))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 21\n    }\n  }, \"Continent:\", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 23\n    }\n  }, country.continent.name)), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, \"Capital: \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 30\n    }\n  }, country.capital))))))));\n};\n\nexport default CardCountry;","map":{"version":3,"sources":["D:/ProgramaciÃ³n/dev-challenge-template-master/kimchechallenge/src/components/CardContainer.js"],"names":["React","CardCountry","props","country","length","map","code","continent","name","languages","len","emoji","native","capital"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACC,OAAN,CAAcC,MAAd,KAAyB,CAAzB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCACgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADhB,CADD,gBAKC;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACC,OAAN,CAAcE,GAAd,CAAmBF,OAAD,iBACjB;AAAK,IAAA,SAAS,EAAC,EAAf;AAAkB,IAAA,GAAG,EAAEA,OAAO,CAACG,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,SAAN,KAAoB,IAApB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,OAAO,CAACI,SAAR,CAAkBC,IAAvB,CADD,gBAGC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACM,SAAR,CAAkBJ,GAAlB,CAAuBK,GAAD,iBACrB;AAAG,IAAA,GAAG,EAAEA,GAAG,CAACF,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBE,GAAG,CAACF,IAAvB,CADD,CADH,CAJJ,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACQ,KADX,OACmBR,OAAO,CAACK,IAD3B,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACS,MADX,CAJF,EAOGV,KAAK,CAACK,SAAN,KAAoB,IAApB,gBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEGJ,OAAO,CAACM,SAAR,CAAkBJ,GAAlB,CAAuBK,GAAD,iBACrB;AAAI,IAAA,GAAG,EAAEA,GAAG,CAACF,IAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGE,GAAG,CAACF,IADP,CADD,CAFH,CADD,gBAUC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,OAAO,CAACI,SAAR,CAAkBC,IADrB,CAFF,CAjBJ,eAwBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BACW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOL,OAAO,CAACU,OAAf,CADX,CAxBF,CAZF,CADF,CADD,CADH,CANJ,CADF;AAyDD,CA1DD;;AA4DA,eAAeZ,WAAf","sourcesContent":["import React from \"react\";\r\n\r\nconst CardCountry = (props) => {\r\n  return (\r\n    <div>\r\n      {props.country.length === 0 ? (\r\n        <h4>\r\n          try some text <i></i>\r\n        </h4>\r\n      ) : (\r\n        <div className=\"card-container\">\r\n          {props.country.map((country) => (\r\n            <div className=\"\" key={country.code}>\r\n              <div className=\"card-container-box\">\r\n                <div >\r\n                  {props.continent === true ? (\r\n                    <h2>{country.continent.name}</h2>\r\n                  ) : (\r\n                    <h2>\r\n                      {country.languages.map((len) => (\r\n                        <p key={len.name}>{len.name}</p>\r\n                      ))}\r\n                    </h2>\r\n                  )}\r\n                </div>\r\n                <div>\r\n                  <h4>\r\n                    {country.emoji} {country.name}\r\n                  </h4>\r\n                  <h4>\r\n                    {country.native}\r\n                  </h4>\r\n                  {props.continent === true ? (\r\n                    <ul >\r\n                      <span >Languages:</span>\r\n                      {country.languages.map((len) => (\r\n                        <li key={len.name}>\r\n                          {len.name}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  ) : (\r\n                    <p>\r\n                      Continent:\r\n                      <span>\r\n                        {country.continent.name}\r\n                      </span>\r\n                    </p>\r\n                  )}\r\n                  <p>\r\n                    Capital: <span>{country.capital}</span>\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardCountry;\r\n"]},"metadata":{},"sourceType":"module"}